/*
 * Hello World API
 *
 * A \"Hello World!\" API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class HelloWorldApiController : ControllerBase
    { 
        /// <summary>
        /// Creates a hello world message.
        /// </summary>
        /// <param name="sayHelloCommandMessage"></param>
        /// <response code="200">The hello world message was created.</response>
        /// <response code="400">The input is malformed.</response>
        /// <response code="401">The user is not authenticated with the system.</response>
        /// <response code="403">The user is not authorized to perform this operation.</response>
        [HttpPost]
        [Route("/hello-world")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateHelloWorld")]
        [SwaggerResponse(statusCode: 200, type: typeof(HelloWorldSaidEventMessage), description: "The hello world message was created.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorMessage), description: "The input is malformed.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorMessage), description: "The user is not authenticated with the system.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorMessage), description: "The user is not authorized to perform this operation.")]
        public virtual IActionResult CreateHelloWorld([FromBody]SayHelloCommandMessage sayHelloCommandMessage)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(HelloWorldSaidEventMessage));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorMessage));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorMessage));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorMessage));
            string exampleJson = null;
            exampleJson = "{\r\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HelloWorldSaidEventMessage>(exampleJson)
            : default(HelloWorldSaidEventMessage);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Deletes a hello world message.
        /// </summary>
        /// <param name="helloWorldId">The ID of the hello world message.</param>
        /// <response code="200">The message was deleted.</response>
        /// <response code="401">The user is not authenticated.</response>
        /// <response code="403">The user is not authorized to view this information.</response>
        /// <response code="404">The hello world message was not found.</response>
        [HttpDelete]
        [Route("/hello-world/{helloWorldId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteHelloWorld")]
        [SwaggerResponse(statusCode: 200, type: typeof(HelloWorldDeletedEventMessage), description: "The message was deleted.")]
        public virtual IActionResult DeleteHelloWorld([FromRoute (Name = "helloWorldId")][Required]Guid helloWorldId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(HelloWorldDeletedEventMessage));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"message\" : {\r\n    \"name\" : \"name\",\r\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HelloWorldDeletedEventMessage>(exampleJson)
            : default(HelloWorldDeletedEventMessage);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets a hello world message.
        /// </summary>
        /// <param name="helloWorldId">The ID of the hello world message.</param>
        /// <response code="200">A hello world message.</response>
        /// <response code="401">The user is not authenticated.</response>
        /// <response code="403">The user is not authorized to view this information.</response>
        /// <response code="404">The hello world message was not found.</response>
        [HttpGet]
        [Route("/hello-world/{helloWorldId}")]
        [ValidateModelState]
        [SwaggerOperation("GetHelloWorld")]
        [SwaggerResponse(statusCode: 200, type: typeof(HelloWorldByIdQueryResponseMessage), description: "A hello world message.")]
        public virtual IActionResult GetHelloWorld([FromRoute (Name = "helloWorldId")][Required]Guid helloWorldId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(HelloWorldByIdQueryResponseMessage));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"message\" : {\r\n    \"name\" : \"name\",\r\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HelloWorldByIdQueryResponseMessage>(exampleJson)
            : default(HelloWorldByIdQueryResponseMessage);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Searchs for hello world messages.
        /// </summary>
        /// <param name="page">The page to retrieve.</param>
        /// <param name="pageSize">The number of results included per page.</param>
        /// <response code="200">A search response.</response>
        /// <response code="400">The input is malformed.</response>
        /// <response code="401">The user is not authenticated with the system.</response>
        /// <response code="403">The user is not authorized to perform this operation.</response>
        [HttpGet]
        [Route("/hello-world")]
        [ValidateModelState]
        [SwaggerOperation("SearchHelloWorlds")]
        [SwaggerResponse(statusCode: 200, type: typeof(HelloWorldSearchQueryResponseMessage), description: "A search response.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorMessage), description: "The input is malformed.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorMessage), description: "The user is not authenticated with the system.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorMessage), description: "The user is not authorized to perform this operation.")]
        public virtual IActionResult SearchHelloWorlds([FromQuery (Name = "page")]int? page, [FromQuery (Name = "pageSize")][Range(1, 100)]int? pageSize)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(HelloWorldSearchQueryResponseMessage));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorMessage));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorMessage));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorMessage));
            string exampleJson = null;
            exampleJson = "{\r\n  \"pagination\" : {\r\n    \"totalResults\" : 1,\r\n    \"pageSize\" : 6,\r\n    \"page\" : 0\r\n  },\r\n  \"results\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HelloWorldSearchQueryResponseMessage>(exampleJson)
            : default(HelloWorldSearchQueryResponseMessage);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Updates an existing hello world message.
        /// </summary>
        /// <param name="updateHelloCommandMessage"></param>
        /// <response code="200">The hello world message was updated.</response>
        /// <response code="400">The input is malformed.</response>
        /// <response code="401">The user is not authenticated with the system.</response>
        /// <response code="403">The user is not authorized to perform this operation.</response>
        /// <response code="404">The specified resource was not found.</response>
        [HttpPut]
        [Route("/hello-world")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateHelloWorld")]
        [SwaggerResponse(statusCode: 200, type: typeof(HelloWorldUpdatedEventMessage), description: "The hello world message was updated.")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorMessage), description: "The input is malformed.")]
        [SwaggerResponse(statusCode: 401, type: typeof(ErrorMessage), description: "The user is not authenticated with the system.")]
        [SwaggerResponse(statusCode: 403, type: typeof(ErrorMessage), description: "The user is not authorized to perform this operation.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorMessage), description: "The specified resource was not found.")]
        public virtual IActionResult UpdateHelloWorld([FromBody]UpdateHelloCommandMessage updateHelloCommandMessage)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(HelloWorldUpdatedEventMessage));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorMessage));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(ErrorMessage));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(ErrorMessage));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorMessage));
            string exampleJson = null;
            exampleJson = "{\r\n  \"message\" : {\r\n    \"name\" : \"name\",\r\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HelloWorldUpdatedEventMessage>(exampleJson)
            : default(HelloWorldUpdatedEventMessage);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
